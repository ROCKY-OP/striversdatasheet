class Solution {
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> ds;
        //int n=candidates.size();
        cs(0,ds,target,candidates,ans);
        return ans;
        
        
    }
    
    void cs(int index,vector<int> ds,int target,vector<int>& candidates,vector<vector<int>>&ans){
        
        if(index==candidates.size() || target==0){
            if(target==0){
                ans.push_back(ds);
            }
            return;
        }
        if(candidates[index]<=target){
            ds.push_back(candidates[index]);
            //target-=candidates[index];
            cs(index,ds,target-candidates[index],candidates,ans);
            ds.pop_back();
        }   
        cs(index+1,ds,target,candidates,ans);
        
    }
    
};
